name: Excavator

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *" # run hourly

jobs:
  update-cursor:
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check remote version
        id: checkver
        run: |
          set -euxo pipefail

          remote_json=$(curl -sSL "https://www.cursor.com/api/download?platform=win32-x64-user&releaseTrack=latest")
          remote_version=$(echo "$remote_json" | jq -r .version)
          remote_commit=$(echo "$remote_json" | jq -r .commitSha)
          local_version=$(jq -r .version bucket/cursor.json)
          echo -e "\033[32mRemote version: $remote_version, commit: $remote_commit\033[0m"
          echo -e "\033[32mLocal version: $local_version\033[0m"

          # if [ "$(printf "%s\n%s\n" "$remote_version" "$local_version" | sort -V | tail -n1)" = "$remote_version" ] && [ "$remote_version" !=
          "$local_version" ]; then
          if dpkg --compare-versions "$remote_version" gt "$local_version"; then
            echo "should_update=true" >> $GITHUB_OUTPUT
          else
            echo -e "\033[32mAlready up-to-date or local version is newer (local: $local_version, remote: $remote_version), no update needed.\033[0m"
            echo "should_update=false" >> $GITHUB_OUTPUT
          fi

          # echo "::set-output name=remote_version::$remote_version"
          # echo "::set-output name=remote_commit::$remote_commit"
          echo "remote_version=$remote_version" >> $GITHUB_OUTPUT
          echo "remote_commit=$remote_commit" >> $GITHUB_OUTPUT

      - name: Install uv
        if: steps.checkver.outputs.should_update == 'true'
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        if: steps.checkver.outputs.should_update == 'true'
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install dependencies
        if: steps.checkver.outputs.should_update == 'true'
        run: uv sync --locked

      - name: Run update script
        if: steps.checkver.outputs.should_update == 'true'
        run: uv run scripts/update_cursor_bucket.py

      - name: Commit and push changes
        if: steps.checkver.outputs.should_update == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add bucket/cursor.json bucket/cursor-${{ steps.checkver.outputs.remote_version }}.json
          git commit -m "chore: add cursor ${{ steps.checkver.outputs.remote_version }}.${{ steps.checkver.outputs.remote_commit }}"
          git push origin "${GITHUB_REF#refs/heads/}"
